# Generated by Django 3.2.12 on 2022-04-09 23:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0004_alter_brewpidevice_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtendedSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invertTFT', models.FloatField(help_text="The fridge and beer temperatures cannot go below this value. Units are specified by 'Temperature format' below.", verbose_name='Min Temperature')),
                ('glycol', models.FloatField(help_text="The fridge and beer temperatures cannot go above this value. Units are specified by 'Temperature format' below.", verbose_name='Max Temperature')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.AlterField(
            model_name='brewpidevice',
            name='board_type',
            field=models.CharField(choices=[('uno', 'Arduino Uno (or compatible)'), ('esp8266', 'ESP8266'), ('esp32', 'ESP32'), ('esp32s2', 'ESP32-S2'), ('esp32c3', 'ESP32-C3'), ('leonardo', 'Arduino Leonardo'), ('core', 'Core'), ('photon', 'Photon')], default='uno', help_text='Board type to which BrewPi is connected', max_length=10),
        ),
        migrations.AlterField(
            model_name='brewpidevice',
            name='connection_type',
            field=models.CharField(choices=[('serial', 'Serial (Arduino and others)'), ('wifi', 'WiFi (ESP8266/ESP32)')], default='serial', help_text='Type of connection between the Raspberry Pi and the hardware', max_length=15),
        ),
    ]
