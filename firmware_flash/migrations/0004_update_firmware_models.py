# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-02-17 22:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('firmware_flash', '0003_multipart'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the project the firmware is associated with', max_length=128)),
                ('description', models.TextField(blank=True, default='', help_text='The description of the project')),
                ('project_url', models.CharField(blank=True, default='', help_text='The URL for the project associated with the firmware', max_length=255)),
                ('documentation_url', models.CharField(blank=True, default='', help_text='The URL for documentation/help on the firmware (if any)', max_length=255)),
                ('support_url', models.CharField(blank=True, default='', help_text='The URL for support (if any, generally a forum thread)', max_length=255)),
                ('weight', models.IntegerField(choices=[(1, '1 (Highest)'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9  (Lowest)')], default=5, help_text='Weight for sorting (Lower weights rise to the top)')),
                ('show_in_standalone_flasher', models.BooleanField(default=False, help_text='Should this show standalone flash app?')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.RemoveField(
            model_name='firmware',
            name='documentation_url',
        ),
        migrations.RemoveField(
            model_name='firmware',
            name='project_url',
        ),
        migrations.AddField(
            model_name='firmware',
            name='checksum_bootloader',
            field=models.CharField(blank=True, default='', help_text='SHA256 checksum of the bootloader file (for checking validity)', max_length=64),
        ),
        migrations.AddField(
            model_name='firmware',
            name='checksum_otadata',
            field=models.CharField(blank=True, default='', help_text='SHA256 checksum of the otadata file (for checking validity)', max_length=64),
        ),
        migrations.AddField(
            model_name='firmware',
            name='download_url_bootloader',
            field=models.CharField(blank=True, default='', help_text='The URL at which the bootloader binary can be downloaded (ESP32 only, optional)', max_length=255),
        ),
        migrations.AddField(
            model_name='firmware',
            name='download_url_otadata',
            field=models.CharField(blank=True, default='', help_text='The URL at which the OTA Dta binary can be downloaded (ESP32 only, optional)', max_length=255),
        ),
        migrations.AddField(
            model_name='firmware',
            name='otadata_address',
            field=models.CharField(blank=True, default='', help_text='The flash address the SPIFFS data should be flashed to (ESP32 only)', max_length=12),
        ),
        migrations.AlterField(
            model_name='firmware',
            name='download_url_spiffs',
            field=models.CharField(blank=True, default='', help_text='The URL at which the SPIFFS binary can be downloaded (optional)', max_length=255),
        ),
        migrations.AlterField(
            model_name='firmware',
            name='revision',
            field=models.CharField(blank=True, default='', help_text='The minor revision number', max_length=20),
        ),
        migrations.AlterField(
            model_name='firmware',
            name='spiffs_address',
            field=models.CharField(blank=True, default='', help_text='The flash address the SPIFFS data should be flashed to', max_length=12),
        ),
        migrations.AddField(
            model_name='firmware',
            name='project',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='firmware_flash.Project'),
        ),
    ]
